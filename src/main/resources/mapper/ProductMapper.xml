<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kaishengit.mapper.ProductMapper">
    <resultMap id="BaseResultMap" type="com.kaishengit.entity.Product">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="product_name" jdbcType="VARCHAR" property="productName"/>
        <result column="product_title" jdbcType="VARCHAR" property="productTitle"/>
        <result column="product_inventory" jdbcType="INTEGER" property="productInventory"/>
        <result column="image" jdbcType="VARCHAR" property="image"/>
        <result column="price" jdbcType="DECIMAL" property="price"/>
        <result column="market_price" jdbcType="DECIMAL" property="marketPrice"/>
        <result column="start_time" jdbcType="TIMESTAMP" property="startTime"/>
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.kaishengit.entity.Product">
        <result column="product_desc" jdbcType="LONGVARCHAR" property="productDesc"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, product_name, product_title, product_inventory, image, price, market_price, start_time, 
    end_time
  </sql>
    <sql id="Blob_Column_List">
    product_desc
  </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.kaishengit.entity.ProductExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.kaishengit.entity.ProductExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from product
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.kaishengit.entity.ProductExample">
        delete from product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.kaishengit.entity.Product">
    insert into product (id, product_name, product_title, 
      product_inventory, image, price, 
      market_price, start_time, end_time, 
      product_desc)
    values (#{id,jdbcType=INTEGER}, #{productName,jdbcType=VARCHAR}, #{productTitle,jdbcType=VARCHAR}, 
      #{productInventory,jdbcType=INTEGER}, #{image,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{marketPrice,jdbcType=DECIMAL}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{productDesc,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.kaishengit.entity.Product" useGeneratedKeys="true" keyProperty="id">
        insert into product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="productName != null">
                product_name,
            </if>
            <if test="productTitle != null">
                product_title,
            </if>
            <if test="productInventory != null">
                product_inventory,
            </if>
            <if test="image != null">
                image,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="marketPrice != null">
                market_price,
            </if>
            <if test="startTime != null">
                start_time,
            </if>
            <if test="endTime != null">
                end_time,
            </if>
            <if test="productDesc != null">
                product_desc,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="productName != null">
                #{productName,jdbcType=VARCHAR},
            </if>
            <if test="productTitle != null">
                #{productTitle,jdbcType=VARCHAR},
            </if>
            <if test="productInventory != null">
                #{productInventory,jdbcType=INTEGER},
            </if>
            <if test="image != null">
                #{image,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="marketPrice != null">
                #{marketPrice,jdbcType=DECIMAL},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="productDesc != null">
                #{productDesc,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.kaishengit.entity.ProductExample" resultType="java.lang.Long">
        select count(*) from product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update product
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.productName != null">
                product_name = #{record.productName,jdbcType=VARCHAR},
            </if>
            <if test="record.productTitle != null">
                product_title = #{record.productTitle,jdbcType=VARCHAR},
            </if>
            <if test="record.productInventory != null">
                product_inventory = #{record.productInventory,jdbcType=INTEGER},
            </if>
            <if test="record.image != null">
                image = #{record.image,jdbcType=VARCHAR},
            </if>
            <if test="record.price != null">
                price = #{record.price,jdbcType=DECIMAL},
            </if>
            <if test="record.marketPrice != null">
                market_price = #{record.marketPrice,jdbcType=DECIMAL},
            </if>
            <if test="record.startTime != null">
                start_time = #{record.startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.endTime != null">
                end_time = #{record.endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.productDesc != null">
                product_desc = #{record.productDesc,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update product
        set id = #{record.id,jdbcType=INTEGER},
        product_name = #{record.productName,jdbcType=VARCHAR},
        product_title = #{record.productTitle,jdbcType=VARCHAR},
        product_inventory = #{record.productInventory,jdbcType=INTEGER},
        image = #{record.image,jdbcType=VARCHAR},
        price = #{record.price,jdbcType=DECIMAL},
        market_price = #{record.marketPrice,jdbcType=DECIMAL},
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
        product_desc = #{record.productDesc,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update product
        set id = #{record.id,jdbcType=INTEGER},
        product_name = #{record.productName,jdbcType=VARCHAR},
        product_title = #{record.productTitle,jdbcType=VARCHAR},
        product_inventory = #{record.productInventory,jdbcType=INTEGER},
        image = #{record.image,jdbcType=VARCHAR},
        price = #{record.price,jdbcType=DECIMAL},
        market_price = #{record.marketPrice,jdbcType=DECIMAL},
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
        end_time = #{record.endTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.kaishengit.entity.Product">
        update product
        <set>
            <if test="productName != null">
                product_name = #{productName,jdbcType=VARCHAR},
            </if>
            <if test="productTitle != null">
                product_title = #{productTitle,jdbcType=VARCHAR},
            </if>
            <if test="productInventory != null">
                product_inventory = #{productInventory,jdbcType=INTEGER},
            </if>
            <if test="image != null">
                image = #{image,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="marketPrice != null">
                market_price = #{marketPrice,jdbcType=DECIMAL},
            </if>
            <if test="startTime != null">
                start_time = #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="productDesc != null">
                product_desc = #{productDesc,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.kaishengit.entity.Product">
    update product
    set product_name = #{productName,jdbcType=VARCHAR},
      product_title = #{productTitle,jdbcType=VARCHAR},
      product_inventory = #{productInventory,jdbcType=INTEGER},
      image = #{image,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      market_price = #{marketPrice,jdbcType=DECIMAL},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      product_desc = #{productDesc,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.kaishengit.entity.Product">
    update product
    set product_name = #{productName,jdbcType=VARCHAR},
      product_title = #{productTitle,jdbcType=VARCHAR},
      product_inventory = #{productInventory,jdbcType=INTEGER},
      image = #{image,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      market_price = #{marketPrice,jdbcType=DECIMAL},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>